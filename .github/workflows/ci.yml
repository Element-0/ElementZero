name: CI

on: [push]

env:
  eatpdb_version: v0.0.4
  bds_version: 1.14.32.1

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: xmake-io/github-action-setup-xmake@v1.0.2
      env:
        XMAKE_GLOBALDIR: "C:\\"

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Test require
      run: xmake q

    - name: Cache lib artifacts
      uses: actions/cache@v1
      id: libcache
      with:
        path: ${{ github.workspace }}/Lib
        key: lib-${{ hashFiles( 'eatpdb.yaml' ) }}-${{ hashFiles( 'index.ico' ) }}-${{ env.eatpdb_version }}-${{ env.bds_version }}

    - name: Download BDS
      if: steps.libcache.outputs.cache-hit != 'true'
      run: |
        curl -L -o D:/bds.zip https://minecraft.azureedge.net/bin-win/bedrock-server-${{ env.bds_version }}.zip
        mkdir BDS
        cd BDS
        unzip D:/bds.zip
      shell: bash

    - name: Install EatPdb
      if: steps.libcache.outputs.cache-hit != 'true'
      run: |
        curl -L -o D:/eatpdb.zip https://github.com/codehz/EatPdb/releases/download/${{ env.eatpdb_version }}/win-x64.zip
        mkdir D:/eatpdb
        cd D:/eatpdb
        unzip D:/eatpdb.zip
      shell: bash

    - name: Build bedrock_server_mod
      if: steps.libcache.outputs.cache-hit != 'true'
      run: |
        curl -L -o D:/rcedit.exe https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe
        mkdir Lib Dist
        cd BDS
        D:/rcedit.exe bedrock_server.exe --set-icon ../index.ico
        D:/eatpdb/eatpdb exec ../eatpdb.yaml
        lib /def:bedrock_server_mod.def /machine:x64
        cp bedrock_server_mod.lib ../Lib
        cp bedrock_server_mod.exe ../Lib
      shell: bash

    - name: Build
      run: |
        xmake -vy
        xmake install
        cp Lib/bedrock_server_mod.exe Dist
        cp Lib/bedrock_server_mod.lib Dist/Lib
        tar cvfJ pkg.tar.xz Dist/*

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: dist
        path: Dist

    - name: Create a new GitHub release if a new tag is pushed
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ env.GITHUB_TAG_NAME }}
        prerelease: false
        draft: true
        files: pkg.tar.xz
        body: (empty)
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}